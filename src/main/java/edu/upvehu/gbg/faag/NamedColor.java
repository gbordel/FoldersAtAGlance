package edu.upvehu.gbg.faag;

import java.awt.Color;


//    class NamedColor {
//        public final int r, g, b;
//        public final String name;
//
//        private NamedColor(String name0, int r0, int g0, int b0)
//        { r = r0; g = g0; b = b0; name = name0; }
//        
//        private int ManhattanDistance(int pixR, int pixG, int pixB)
//        { return (Math.abs(pixR - r)+ Math.abs(pixG - g)+ Math.abs(pixB - b)); }
//
//        
//        static public String getColorName(Color color) {
//        for (NamedColor c : NamedColor.NAMED_COLORS) if (c.ManhattanDistance(color.getRed(),color.getGreen(), color.getBlue())==0) return c.name;
//        return "NoNamedColor";
//        }
//        static public Color getColorFromName(String name) {
//            for (NamedColor c : NamedColor.NAMED_COLORS) if (c.name.equalsIgnoreCase(name)) return new Color(c.r,c.g,c.b);
//            return colorFromHex(name);
//        }
//
//        static public String getColorNameorHEx(Color c) {
//            String name=getColorName(c);
//            return name.equals("NoNamedColor")? colorToHex(c): name;
//        }
//
//        static public String colorToHex(Color c) {
//            return "#"+Integer.toHexString(c.getRGB()).substring(2);
//        }
//
//        static public Color colorFromHex(String hex) {
//            //TODO basar esto en excepcion//
//            if (!hex.matches("#[0-9a-fA-F]{6}")) throw new IllegalArgumentException(hex+ " is not a color specification ");
//            return new Color(Integer.decode(hex));
//        }
//        
//        /**
//         * The named colors
//         */
//        static final NamedColor[] NAMED_COLORS = 
//    {
//        new NamedColor("AliceBlue", 0xF0, 0xF8, 0xFF),
//        new NamedColor("AntiqueWhite", 0xFA, 0xEB, 0xD7),
//        new NamedColor("Aqua", 0x00, 0xFF, 0xFF),
//        new NamedColor("Aquamarine", 0x7F, 0xFF, 0xD4),
//        new NamedColor("Azure", 0xF0, 0xFF, 0xFF),
//        new NamedColor("Beige", 0xF5, 0xF5, 0xDC),
//        new NamedColor("Bisque", 0xFF, 0xE4, 0xC4),
//        new NamedColor("Black", 0x00, 0x00, 0x00),
//        new NamedColor("BlanchedAlmond", 0xFF, 0xEB, 0xCD),
//        new NamedColor("Blue", 0x00, 0x00, 0xFF),
//        new NamedColor("BlueViolet", 0x8A, 0x2B, 0xE2),
//        new NamedColor("Brown", 0xA5, 0x2A, 0x2A),
//        new NamedColor("BurlyWood", 0xDE, 0xB8, 0x87),
//        new NamedColor("CadetBlue", 0x5F, 0x9E, 0xA0),
//        new NamedColor("Chartreuse", 0x7F, 0xFF, 0x00),
//        new NamedColor("Chocolate", 0xD2, 0x69, 0x1E),
//        new NamedColor("Coral", 0xFF, 0x7F, 0x50),
//        new NamedColor("CornflowerBlue", 0x64, 0x95, 0xED),
//        new NamedColor("Cornsilk", 0xFF, 0xF8, 0xDC),
//        new NamedColor("Crimson", 0xDC, 0x14, 0x3C),
//        new NamedColor("Cyan", 0x00, 0xFF, 0xFF),
//        new NamedColor("DarkBlue", 0x00, 0x00, 0x8B),
//        new NamedColor("DarkCyan", 0x00, 0x8B, 0x8B),
//        new NamedColor("DarkGoldenRod", 0xB8, 0x86, 0x0B),
//        new NamedColor("DarkGray", 0xA9, 0xA9, 0xA9),
//        new NamedColor("DarkGreen", 0x00, 0x64, 0x00),
//        new NamedColor("DarkKhaki", 0xBD, 0xB7, 0x6B),
//        new NamedColor("DarkMagenta", 0x8B, 0x00, 0x8B),
//        new NamedColor("DarkOliveGreen", 0x55, 0x6B, 0x2F),
//        new NamedColor("DarkOrange", 0xFF, 0x8C, 0x00),
//        new NamedColor("DarkOrchid", 0x99, 0x32, 0xCC),
//        new NamedColor("DarkRed", 0x8B, 0x00, 0x00),
//        new NamedColor("DarkSalmon", 0xE9, 0x96, 0x7A),
//        new NamedColor("DarkSeaGreen", 0x8F, 0xBC, 0x8F),
//        new NamedColor("DarkSlateBlue", 0x48, 0x3D, 0x8B),
//        new NamedColor("DarkSlateGray", 0x2F, 0x4F, 0x4F),
//        new NamedColor("DarkTurquoise", 0x00, 0xCE, 0xD1),
//        new NamedColor("DarkViolet", 0x94, 0x00, 0xD3),
//        new NamedColor("DeepPink", 0xFF, 0x14, 0x93),
//        new NamedColor("DeepSkyBlue", 0x00, 0xBF, 0xFF),
//        new NamedColor("DimGray", 0x69, 0x69, 0x69),
//        new NamedColor("DodgerBlue", 0x1E, 0x90, 0xFF),
//        new NamedColor("FireBrick", 0xB2, 0x22, 0x22),
//        new NamedColor("FloralWhite", 0xFF, 0xFA, 0xF0),
//        new NamedColor("ForestGreen", 0x22, 0x8B, 0x22),
//        new NamedColor("Fuchsia", 0xFF, 0x00, 0xFF),
//        new NamedColor("Gainsboro", 0xDC, 0xDC, 0xDC),
//        new NamedColor("GhostWhite", 0xF8, 0xF8, 0xFF),
//        new NamedColor("Gold", 0xFF, 0xD7, 0x00),
//        new NamedColor("GoldenRod", 0xDA, 0xA5, 0x20),
//        new NamedColor("Gray", 0x80, 0x80, 0x80),
//        new NamedColor("Green", 0x00, 0x80, 0x00),
//        new NamedColor("GreenYellow", 0xAD, 0xFF, 0x2F),
//        new NamedColor("HoneyDew", 0xF0, 0xFF, 0xF0),
//        new NamedColor("HotPink", 0xFF, 0x69, 0xB4),
//        new NamedColor("IndianRed", 0xCD, 0x5C, 0x5C),
//        new NamedColor("Indigo", 0x4B, 0x00, 0x82),
//        new NamedColor("Ivory", 0xFF, 0xFF, 0xF0),
//        new NamedColor("Khaki", 0xF0, 0xE6, 0x8C),
//        new NamedColor("Lavender", 0xE6, 0xE6, 0xFA),
//        new NamedColor("LavenderBlush", 0xFF, 0xF0, 0xF5),
//        new NamedColor("LawnGreen", 0x7C, 0xFC, 0x00),
//        new NamedColor("LemonChiffon", 0xFF, 0xFA, 0xCD),
//        new NamedColor("LightBlue", 0xAD, 0xD8, 0xE6),
//        new NamedColor("LightCoral", 0xF0, 0x80, 0x80),
//        new NamedColor("LightCyan", 0xE0, 0xFF, 0xFF),
//        new NamedColor("LightGoldenRodYellow", 0xFA, 0xFA, 0xD2),
//        new NamedColor("LightGray", 0xD3, 0xD3, 0xD3),
//        new NamedColor("LightGreen", 0x90, 0xEE, 0x90),
//        new NamedColor("LightPink", 0xFF, 0xB6, 0xC1),
//        new NamedColor("LightSalmon", 0xFF, 0xA0, 0x7A),
//        new NamedColor("LightSeaGreen", 0x20, 0xB2, 0xAA),
//        new NamedColor("LightSkyBlue", 0x87, 0xCE, 0xFA),
//        new NamedColor("LightSlateGray", 0x77, 0x88, 0x99),
//        new NamedColor("LightSteelBlue", 0xB0, 0xC4, 0xDE),
//        new NamedColor("LightYellow", 0xFF, 0xFF, 0xE0),
//        new NamedColor("Lime", 0x00, 0xFF, 0x00),
//        new NamedColor("LimeGreen", 0x32, 0xCD, 0x32),
//        new NamedColor("Linen", 0xFA, 0xF0, 0xE6),
//        new NamedColor("Magenta", 0xFF, 0x00, 0xFF),
//        new NamedColor("Maroon", 0x80, 0x00, 0x00),
//        new NamedColor("MediumAquaMarine", 0x66, 0xCD, 0xAA),
//        new NamedColor("MediumBlue", 0x00, 0x00, 0xCD),
//        new NamedColor("MediumOrchid", 0xBA, 0x55, 0xD3),
//        new NamedColor("MediumPurple", 0x93, 0x70, 0xDB),
//        new NamedColor("MediumSeaGreen", 0x3C, 0xB3, 0x71),
//        new NamedColor("MediumSlateBlue", 0x7B, 0x68, 0xEE),
//        new NamedColor("MediumSpringGreen", 0x00, 0xFA, 0x9A),
//        new NamedColor("MediumTurquoise", 0x48, 0xD1, 0xCC),
//        new NamedColor("MediumVioletRed", 0xC7, 0x15, 0x85),
//        new NamedColor("MidnightBlue", 0x19, 0x19, 0x70),
//        new NamedColor("MintCream", 0xF5, 0xFF, 0xFA),
//        new NamedColor("MistyRose", 0xFF, 0xE4, 0xE1),
//        new NamedColor("Moccasin", 0xFF, 0xE4, 0xB5),
//        new NamedColor("NavajoWhite", 0xFF, 0xDE, 0xAD),
//        new NamedColor("Navy", 0x00, 0x00, 0x80),
//        new NamedColor("OldLace", 0xFD, 0xF5, 0xE6),
//        new NamedColor("Olive", 0x80, 0x80, 0x00),
//        new NamedColor("OliveDrab", 0x6B, 0x8E, 0x23),
//        new NamedColor("Orange", 0xFF, 0xA5, 0x00),
//        new NamedColor("OrangeRed", 0xFF, 0x45, 0x00),
//        new NamedColor("Orchid", 0xDA, 0x70, 0xD6),
//        new NamedColor("PaleGoldenRod", 0xEE, 0xE8, 0xAA),
//        new NamedColor("PaleGreen", 0x98, 0xFB, 0x98),
//        new NamedColor("PaleTurquoise", 0xAF, 0xEE, 0xEE),
//        new NamedColor("PaleVioletRed", 0xDB, 0x70, 0x93),
//        new NamedColor("PapayaWhip", 0xFF, 0xEF, 0xD5),
//        new NamedColor("PeachPuff", 0xFF, 0xDA, 0xB9),
//        new NamedColor("Peru", 0xCD, 0x85, 0x3F),
//        new NamedColor("Pink", 0xFF, 0xC0, 0xCB),
//        new NamedColor("Plum", 0xDD, 0xA0, 0xDD),
//        new NamedColor("PowderBlue", 0xB0, 0xE0, 0xE6),
//        new NamedColor("Purple", 0x80, 0x00, 0x80),
//        new NamedColor("Red", 0xFF, 0x00, 0x00),
//        new NamedColor("RosyBrown", 0xBC, 0x8F, 0x8F),
//        new NamedColor("RoyalBlue", 0x41, 0x69, 0xE1),
//        new NamedColor("SaddleBrown", 0x8B, 0x45, 0x13),
//        new NamedColor("Salmon", 0xFA, 0x80, 0x72),
//        new NamedColor("SandyBrown", 0xF4, 0xA4, 0x60),
//        new NamedColor("SeaGreen", 0x2E, 0x8B, 0x57),
//        new NamedColor("SeaShell", 0xFF, 0xF5, 0xEE),
//        new NamedColor("Sienna", 0xA0, 0x52, 0x2D),
//        new NamedColor("Silver", 0xC0, 0xC0, 0xC0),
//        new NamedColor("SkyBlue", 0x87, 0xCE, 0xEB),
//        new NamedColor("SlateBlue", 0x6A, 0x5A, 0xCD),
//        new NamedColor("SlateGray", 0x70, 0x80, 0x90),
//        new NamedColor("Snow", 0xFF, 0xFA, 0xFA),
//        new NamedColor("SpringGreen", 0x00, 0xFF, 0x7F),
//        new NamedColor("SteelBlue", 0x46, 0x82, 0xB4),
//        new NamedColor("Tan", 0xD2, 0xB4, 0x8C),
//        new NamedColor("Teal", 0x00, 0x80, 0x80),
//        new NamedColor("Thistle", 0xD8, 0xBF, 0xD8),
//        new NamedColor("Tomato", 0xFF, 0x63, 0x47),
//        new NamedColor("Turquoise", 0x40, 0xE0, 0xD0),
//        new NamedColor("Violet", 0xEE, 0x82, 0xEE),
//        new NamedColor("Wheat", 0xF5, 0xDE, 0xB3),
//        new NamedColor("White", 0xFF, 0xFF, 0xFF),
//        new NamedColor("WhiteSmoke", 0xF5, 0xF5, 0xF5),
//        new NamedColor("Yellow", 0xFF, 0xFF, 0x00),
//        new NamedColor("YellowGreen", 0x9A, 0xCD, 0x32)
//    };
//    
//    }

public enum NamedColor {
AliceBlue(0xF0, 0xF8, 0xFF),             AntiqueWhite(0xFA, 0xEB, 0xD7),
Aqua(0x00, 0xFF, 0xFF),                  Aquamarine(0x7F, 0xFF, 0xD4),
Azure(0xF0, 0xFF, 0xFF),                 Beige(0xF5, 0xF5, 0xDC),
Bisque(0xFF, 0xE4, 0xC4),                Black(0x00, 0x00, 0x00),
BlanchedAlmond(0xFF, 0xEB, 0xCD),        Blue(0x00, 0x00, 0xFF),
BlueViolet(0x8A, 0x2B, 0xE2),            Brown(0xA5, 0x2A, 0x2A),
BurlyWood(0xDE, 0xB8, 0x87),             CadetBlue(0x5F, 0x9E, 0xA0),
Chartreuse(0x7F, 0xFF, 0x00),            Chocolate(0xD2, 0x69, 0x1E),
Coral(0xFF, 0x7F, 0x50),                 CornflowerBlue(0x64, 0x95, 0xED),
Cornsilk(0xFF, 0xF8, 0xDC),              Crimson(0xDC, 0x14, 0x3C),
Cyan(0x00, 0xFF, 0xFF),                  DarkBlue(0x00, 0x00, 0x8B),
DarkCyan(0x00, 0x8B, 0x8B),              DarkGoldenRod(0xB8, 0x86, 0x0B),
DarkGray(0xA9, 0xA9, 0xA9),              DarkGreen(0x00, 0x64, 0x00),
DarkKhaki(0xBD, 0xB7, 0x6B),             DarkMagenta(0x8B, 0x00, 0x8B),
DarkOliveGreen(0x55, 0x6B, 0x2F),        DarkOrange(0xFF, 0x8C, 0x00),
DarkOrchid(0x99, 0x32, 0xCC),            DarkRed(0x8B, 0x00, 0x00),
DarkSalmon(0xE9, 0x96, 0x7A),            DarkSeaGreen(0x8F, 0xBC, 0x8F),
DarkSlateBlue(0x48, 0x3D, 0x8B),         DarkSlateGray(0x2F, 0x4F, 0x4F),
DarkTurquoise(0x00, 0xCE, 0xD1),         DarkViolet(0x94, 0x00, 0xD3),
DeepPink(0xFF, 0x14, 0x93),              DeepSkyBlue(0x00, 0xBF, 0xFF),
DimGray(0x69, 0x69, 0x69),               DodgerBlue(0x1E, 0x90, 0xFF),
FireBrick(0xB2, 0x22, 0x22),             FloralWhite(0xFF, 0xFA, 0xF0),
ForestGreen(0x22, 0x8B, 0x22),           Fuchsia(0xFF, 0x00, 0xFF),
Gainsboro(0xDC, 0xDC, 0xDC),             GhostWhite(0xF8, 0xF8, 0xFF),
Gold(0xFF, 0xD7, 0x00),                  GoldenRod(0xDA, 0xA5, 0x20),
Gray(0x80, 0x80, 0x80),                  Green(0x00, 0x80, 0x00),
GreenYellow(0xAD, 0xFF, 0x2F),           HoneyDew(0xF0, 0xFF, 0xF0),
HotPink(0xFF, 0x69, 0xB4),               IndianRed(0xCD, 0x5C, 0x5C),
Indigo(0x4B, 0x00, 0x82),                Ivory(0xFF, 0xFF, 0xF0),
Khaki(0xF0, 0xE6, 0x8C),                 Lavender(0xE6, 0xE6, 0xFA),
LavenderBlush(0xFF, 0xF0, 0xF5),         LawnGreen(0x7C, 0xFC, 0x00),
LemonChiffon(0xFF, 0xFA, 0xCD),          LightBlue(0xAD, 0xD8, 0xE6),
LightCoral(0xF0, 0x80, 0x80),            LightCyan(0xE0, 0xFF, 0xFF),
LightGoldenRodYellow(0xFA, 0xFA, 0xD2),  LightGray(0xD3, 0xD3, 0xD3),
LightGreen(0x90, 0xEE, 0x90),            LightPink(0xFF, 0xB6, 0xC1),
LightSalmon(0xFF, 0xA0, 0x7A),           LightSeaGreen(0x20, 0xB2, 0xAA),
LightSkyBlue(0x87, 0xCE, 0xFA),          LightSlateGray(0x77, 0x88, 0x99),
LightSteelBlue(0xB0, 0xC4, 0xDE),        LightYellow(0xFF, 0xFF, 0xE0),
Lime(0x00, 0xFF, 0x00),                  LimeGreen(0x32, 0xCD, 0x32),
Linen(0xFA, 0xF0, 0xE6),                 Magenta(0xFF, 0x00, 0xFF),
Maroon(0x80, 0x00, 0x00),                MediumAquaMarine(0x66, 0xCD, 0xAA),
MediumBlue(0x00, 0x00, 0xCD),            MediumOrchid(0xBA, 0x55, 0xD3),
MediumPurple(0x93, 0x70, 0xDB),          MediumSeaGreen(0x3C, 0xB3, 0x71),
MediumSlateBlue(0x7B, 0x68, 0xEE),       MediumSpringGreen(0x00, 0xFA, 0x9A),
MediumTurquoise(0x48, 0xD1, 0xCC),       MediumVioletRed(0xC7, 0x15, 0x85),
MidnightBlue(0x19, 0x19, 0x70),          MintCream(0xF5, 0xFF, 0xFA),
MistyRose(0xFF, 0xE4, 0xE1),             Moccasin(0xFF, 0xE4, 0xB5),
NavajoWhite(0xFF, 0xDE, 0xAD),           Navy(0x00, 0x00, 0x80),
OldLace(0xFD, 0xF5, 0xE6),               Olive(0x80, 0x80, 0x00),
OliveDrab(0x6B, 0x8E, 0x23),             Orange(0xFF, 0xA5, 0x00),
OrangeRed(0xFF, 0x45, 0x00),             Orchid(0xDA, 0x70, 0xD6),
PaleGoldenRod(0xEE, 0xE8, 0xAA),         PaleGreen(0x98, 0xFB, 0x98),
PaleTurquoise(0xAF, 0xEE, 0xEE),         PaleVioletRed(0xDB, 0x70, 0x93),
PapayaWhip(0xFF, 0xEF, 0xD5),            PeachPuff(0xFF, 0xDA, 0xB9),
Peru(0xCD, 0x85, 0x3F),                  Pink(0xFF, 0xC0, 0xCB),
Plum(0xDD, 0xA0, 0xDD),                  PowderBlue(0xB0, 0xE0, 0xE6),
Purple(0x80, 0x00, 0x80),                Red(0xFF, 0x00, 0x00),
RosyBrown(0xBC, 0x8F, 0x8F),             RoyalBlue(0x41, 0x69, 0xE1),
SaddleBrown(0x8B, 0x45, 0x13),           Salmon(0xFA, 0x80, 0x72),
SandyBrown(0xF4, 0xA4, 0x60),            SeaGreen(0x2E, 0x8B, 0x57),
SeaShell(0xFF, 0xF5, 0xEE),              Sienna(0xA0, 0x52, 0x2D),
Silver(0xC0, 0xC0, 0xC0),                SkyBlue(0x87, 0xCE, 0xEB),
SlateBlue(0x6A, 0x5A, 0xCD),             SlateGray(0x70, 0x80, 0x90),
Snow(0xFF, 0xFA, 0xFA),                  SpringGreen(0x00, 0xFF, 0x7F),
SteelBlue(0x46, 0x82, 0xB4),             Tan(0xD2, 0xB4, 0x8C),
Teal(0x00, 0x80, 0x80),                  Thistle(0xD8, 0xBF, 0xD8),
Tomato(0xFF, 0x63, 0x47),                Turquoise(0x40, 0xE0, 0xD0),
Violet(0xEE, 0x82, 0xEE),                Wheat(0xF5, 0xDE, 0xB3),
White(0xFF, 0xFF, 0xFF),                 WhiteSmoke(0xF5, 0xF5, 0xF5),
Yellow(0xFF, 0xFF, 0x00),                YellowGreen(0x9A, 0xCD, 0x32);

        private final int r, g, b;

        private NamedColor(int r0, int g0, int b0)
        { r = r0; g = g0; b = b0; }
        
        private int ManhattanDistance(int pixR, int pixG, int pixB)
        { return (Math.abs(pixR - r)+ Math.abs(pixG - g)+ Math.abs(pixB - b)); }

        
        static public String getColorName(Color color) {
        for (NamedColor c : NamedColor.values()) if (c.ManhattanDistance(color.getRed(),color.getGreen(), color.getBlue())==0) return c.name();
        return "NoNamedColor";
        }
        static public Color getColorFromName(String name) {
            for (NamedColor c : NamedColor.values()) if (c.name().equalsIgnoreCase(name)) return new Color(c.r,c.g,c.b);
            return colorFromHex(name);
        }

        static public String getColorNameorHEx(Color c) {
            String name=getColorName(c);
            return name.equals("NoNamedColor")? colorToHex(c): name;
        }

        static public String colorToHex(Color c) {
            return "#"+Integer.toHexString(c.getRGB()).substring(2);
        }

        static public Color colorFromHex(String hex) {
            //TODO basar esto en excepcion//
            if (!hex.matches("#[0-9a-fA-F]{6}")) throw new IllegalArgumentException(hex+ " is not a color specification ");
            return new Color(Integer.decode(hex));
        }

}